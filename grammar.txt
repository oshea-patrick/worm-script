// program
( assignment || functionCall || iterator)*
EOF

// assignment
constant || constant-property (, constant || constant-property)* (= value)

// constant
regex-for-constant

// constant-property
regex-for-constant(.regex-for-constant)+

// value
function| number| string | array | dictionary | boolean | functionCall | constant | constant-property

// boolean
true | false |conditional-expression

// function
(
    (@ paramater (, paramater)* )*
    ( assignment || functionCall || iterator)*

    (return value or expression)
)

// number
[0-9]+(.[0-9]*)

// string
'*' | "*" | `*`

// array
[(value ,)*] | [ x for x in col where condition ]
[value ( (, value)* | for ( constant | constant-assugnment ) in value where conditional-expression )]

// math-expression
value ( [*|/|//|+|-|^|%] (value | math-expression) )+

// conditional-expression
value && value
value || value
value | value
value & value

// dictionary
{ (constant: value || expression ,)* }

// iterator
for-loop || while-loop

//for-loop
for constant in constant || array || dict {
    (declaration || functionCall || function || iterator)*
}

//while-loop
while expression {
 (declaration || functionCall || function || iterator)*   
}
