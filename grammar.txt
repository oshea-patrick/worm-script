// program
(declaration || value || iterator)*

// declaration
constant = value || expression
constant // translates to constant = undefined

// values can be
function     starts with a (
number       starts with a number
string       starts with '' or ""
array        starts with a [
dictionary   starts with a {
regex        starts with a /
functionCall starts with a (

// function
(
    (@ paramater declaration which is a declaration))*
    ( declaration || functionCall || function || iterator)*

    return value or expression [optional] but if not return undefined
)

//number
[0-9]+(.[0-9]*)

//string
'*'
"*"
`*`

array
[]

// expression
value ||
value * value ||
value / value ||
value + value ||
value - value ||
value && value ||
value || value ||
value | value ||
value & value ||

// iterator

for-loop || while-loop

//for-loop
for constant of constant || array || value {
    ( declaration || functionCall || function || iterator)*
}

//while-loop
