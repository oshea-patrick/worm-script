// program
( declaration || functionCall || function || iterator)*

// assignment
constant (, constant)* = (value || expression)

// constant
regex-for-constant

// constant-property
regex-for-constant(.regex-for-constant)+

// value
function     starts with a (
number       starts with a number
string       starts with '' or ""
array        starts with a [
dictionary   starts with a {
functionCall starts with a (
boolean      true or false

// function
(
    (@ paramater (, paramater)* )*
    ( declaration || functionCall || function || iterator)*

    return value or expression [optional] but if not return undefined
)

// number
[0-9]+(.[0-9]*)

// string
'*'
"*"
`*`

// array
[(value ,)*]
[ x for x in col where condition ]

// expression
value
constant
constant-property
value * value
value / value
value + value
value - value
value && value
value || value
value | value
value & value

// dictionary
{ (key: value ,)* }

// iterator
for-loop || while-loop

//for-loop
for constant of constant || array || value {
    (declaration || functionCall || function || iterator)*
}

//while-loop
while expression {
 (declaration || functionCall || function || iterator)*   
}
