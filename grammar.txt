// program
( script )*
EOF

// script
assignment || functionCall || iterator || if-statement

// assignment
constant || constant-property (, constant || constant-property)* (= value)

// constant
regex-for-constant

// constant-property
regex-for-constant(.regex-for-constant | [regex-for-constant | number | string] )+

// value
function | number| string | array | dictionary | boolean | functionCall | constant | constant-property

// boolean
true | false | conditional-expression

// function
(
    (@ constant (, constant)* )*
    ( script )*
    (return value)
)

// number
[0-9]+(.[0-9]*)

// string
'*' | "*" | `*`

// array
[(value ,)*] | [ x for x in col where condition ]
[value ( (, value)* | for ( constant | constant-assugnment ) in value where conditional-expression )]

// math-expression
value ( [*|/|//|+|-|^|%|==] (value | math-expression) )+

// conditional-expression
value ( (&|&&||||||or|and|>|<|is|isnt) (value | conditional-expression) )+

// dictionary
{ (constant : value ,)* }

// iterator
for-loop || while-loop

//for-loop
for constant in constant || constant-property || array || dict {
    (script)+
}

// functionCall
regex-for-constant(value (, value)*)

// while-loop
while conditional-expression {
 (script)+  
}

// conditional-statement
conditional-statement {
    (script)+
}

// if-statement
[
(if conditional-statement)+ 
(elif-statement)*
(else=statement)
]+

// elif-statement
(elif conditional-statment)+

// else-statement
else conditional-statement
